# Generated by Django 4.2 on 2023-04-27 01:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "uid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True,
                        max_length=100,
                        unique=True,
                        verbose_name="Email ID",
                    ),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        db_index=True,
                        max_length=128,
                        null=True,
                        region=None,
                        unique=True,
                        verbose_name="Phone number",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="First name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Last name"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("MALE", "MALE"),
                            ("FEMALE", "FEMALE"),
                            ("OTHER", "OTHER"),
                            ("NONE", "NONE"),
                        ],
                        default="NONE",
                        max_length=100,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Is Active"),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="Is Staff"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(default=False, verbose_name="Is Superuser"),
                ),
                (
                    "is_email_verified",
                    models.BooleanField(default=False, verbose_name="Email verified"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "ordering": ["id", "email"],
            },
        ),
        migrations.CreateModel(
            name="UserSecretInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "otp",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Otp"
                    ),
                ),
                (
                    "otp_created_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Otp Created At"
                    ),
                ),
                (
                    "otp_expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Otp Expiry"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time this secret information was last updated.",
                        verbose_name="Updated At",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="secret",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
